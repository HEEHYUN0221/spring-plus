#name: Deploy
#
#on:
#  workflow_dispatch:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#
#      - name: Make application.yml
#        run: |
#          cd ./src/main/resources
#          touch ./application.yml
#          echo "${{ secrets.YML_SECRET }}" > ./application.yml
#        shell: bash
#
#      - name: gradlew bootJar
#        run: ./gradlew bootJar
#
#      - name: copy jar to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ubuntu
#          key: ${{ secrets.SSH_KEY }}
#          port: 22
#          source: "./build/libs/*.jar"
#          target: "~"
#          strip_components: 2
#
#      - name: SSH Commands
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ubuntu
#          key: ${{ secrets.SSH_KEY }}
#          port: 22
#          script_stop: true
#          script: |
#             for pid in $(pgrep java); do
#              if ps -p $pid -o args= | grep -q 'java -jar'; then
#               echo "Java 프로세스 발견 (PID: $pid). 종료 중..."
#               sudo kill -9 $pid
#              fi
#             done
#             nohup java -jar ~/*.jar > ~/app.log 2>&1 &


name: Deploy

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main


jobs:
  myjob1:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Your step
        run: echo "This runs only when a PR is merged"

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.YML_SECRET }}" > ./src/main/resources/application.yml
        shell: bash


      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Save Docker image
        run: docker save myapp:latest | gzip > myapp.tar.gz

      - name: Copy Docker image to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          source: "myapp.tar.gz"
          target: "~/"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load < ~/myapp.tar.gz
            docker stop myapp-container || true
            docker rm myapp-container || true
            docker run -d --name myapp-container -p 8080:8080 myapp:latest
            docker image prune -f